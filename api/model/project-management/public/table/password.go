//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Password = newPasswordTable("public", "password", "")

type passwordTable struct {
	postgres.Table

	// Columns
	UserID       postgres.ColumnString
	HashPassword postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PasswordTable struct {
	passwordTable

	EXCLUDED passwordTable
}

// AS creates new PasswordTable with assigned alias
func (a PasswordTable) AS(alias string) *PasswordTable {
	return newPasswordTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PasswordTable with assigned schema name
func (a PasswordTable) FromSchema(schemaName string) *PasswordTable {
	return newPasswordTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PasswordTable with assigned table prefix
func (a PasswordTable) WithPrefix(prefix string) *PasswordTable {
	return newPasswordTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PasswordTable with assigned table suffix
func (a PasswordTable) WithSuffix(suffix string) *PasswordTable {
	return newPasswordTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPasswordTable(schemaName, tableName, alias string) *PasswordTable {
	return &PasswordTable{
		passwordTable: newPasswordTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newPasswordTableImpl("", "excluded", ""),
	}
}

func newPasswordTableImpl(schemaName, tableName, alias string) passwordTable {
	var (
		UserIDColumn       = postgres.StringColumn("user_id")
		HashPasswordColumn = postgres.StringColumn("hash_password")
		allColumns         = postgres.ColumnList{UserIDColumn, HashPasswordColumn}
		mutableColumns     = postgres.ColumnList{UserIDColumn, HashPasswordColumn}
	)

	return passwordTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID:       UserIDColumn,
		HashPassword: HashPasswordColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
